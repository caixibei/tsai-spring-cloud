# 版本记录
# docker version: 26.1.3
# docker compose version: 2.27.0
# centos version: 7.8

# docker-compose安装命令
# sudo curl -L "https://github.com/docker/compose/releases/download/v2.27.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
# sudo chmod +x /usr/local/bin/docker-compose
# sudo ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose
# docker-compose --version

# 开启交换区，扩大运存（不推荐，速度会比较慢，有条件的购买更大的服务器）
# sudo dd if=/dev/zero of=swapfile bs=1G count=3
# sudo mkswap swapfile
# sudo chmod 600 swapfile
# sudo swapon swapfile
version: "3"
services:

  # 定义一个名为 redis-service 的服务
  redis-service:
    # 镜像版本
    image: redis:latest
    # 指定容器名称为 mysql
    container_name: redis
    # 重启策略
    restart: always
    # 端口映射
    ports:
      - "6379:6379"
    # 磁盘挂载
    volumes:
      - ./docker/redis/conf/redis.conf:/etc/redis/redis.conf:rw
      - ./docker/redis/data/:/data:rw
    # 启动命令
    command:
      redis-server /etc/redis/redis.conf --appendonly yes
    # 网络设置
    networks:
      - tsai-spring-cloud
    # 部署设置
    #deploy:
    #  # 确保只有一个副本
    #  replicas: 1
    #  # 部署资源大小限制
    #  resources:
    #    limits:
    #      cpus: 0.2
    #      memory: 512M
    #    reservations:
    #      cpus: 0.2
    #      memory: 512M

  # 定义一个名为 mysql_service 的服务
  mysql-service:
    # 镜像版本
    image: mysql:5.7
    # 指定容器名称为 mysql
    container_name: mysql
    # 启动环境参数配置
    environment:
      MYSQL_ROOT_PASSWORD: NJI(mko0
      MYSQL_USER: scott
      MYSQL_PASS: scott
    # 文件挂载
    volumes:
      - ./docker/mysql/data:/var/lib/mysql
      - ./docker/mysql/conf/my.cnf:/etc/my.cnf
    # 暴露容器的端口映射，将容器的端口映射到主机端口
    ports:
      - "3306:3306"
    # 网络设置
    networks:
      - tsai-spring-cloud
    # 部署设置
    #deploy:
    #  # 确保只有一个副本
    #  replicas: 1
    #  # 部署资源大小限制
    #  resources:
    #    limits:
    #      cpus: 0.5
    #      memory: 1024M
    #    reservations:
    #      cpus: 0.2
    #      memory: 512M

  # 定义一个名为 spring-cloud-eureka-master 的服务
  spring-cloud-eureka-master:
    # 指定容器所使用的镜像名称为 spring-cloud-eureka
    # image: spring-cloud-eureka:latest
    # 指定容器的名称为 spring-cloud-eureka-master
    container_name: spring-cloud-eureka-master
    privileged: false
    # 设置容器的自动重启策略为 always，即容器总是重新启动
    restart: always
    build:
      # 指定构建该服务的上下文路径，即 docker-compose.yml 所在的目录
      context: ./
      # 指定 Dockerfile 文件路径
      dockerfile: ./spring-cloud-eureka/Dockerfile
      # 参数
      args:
        VERSION: 1.1.0
    # 暴露容器的端口映射，将容器的端口映射到主机端口
    ports:
      - "8761:8761"
    # 启动环境参数配置
    environment:
      - SERVER_PORT=8761
      - APPLICATION_NAME=spring-cloud-eureka
      - EUREKA_ADMIN_NAME=admin
      - EUREKA_ADMIN_PASSWORD=123456
      - HOSTNAME=spring-cloud-eureka-master
      - PREFER_IP_ADDRESS=true
      - LEASE_RENEWAL_INTERVAL_IN_SECONDS=30
      - FETCH_REGISTRY=true
      - REGISTER_WITH_EUREKA=true
      - DEFAULT_ZONE=http://admin:123456@spring-cloud-eureka-slave:8762/eureka/
      - ENDPOINTS=info,shutdown
      - ENABLE_SHOWDOWN=true
      - ENABLE_SELF_PRESERVATION=true
      - EVICTION_INTERVAL_TIMER_IN_MS=30000
    # 网络设置
    networks:
      - tsai-spring-cloud
    # 部署设置
    #deploy:
    #  # 确保只有一个副本
    #  replicas: 1
    #  # 部署资源大小限制
    #  resources:
    #    limits:
    #      cpus: 0.2
    #      memory: 512M
    #    reservations:
    #      cpus: 0.2
    #      memory: 512M

  # 定义一个名为 spring-cloud-eureka-slave 的服务
  spring-cloud-eureka-slave:
    # 指定容器所使用的镜像名称为 spring-cloud-eureka
    # image: spring-cloud-eureka:latest
    # 指定容器的名称为 spring-cloud-eureka-master
    container_name: spring-cloud-eureka-slave
    privileged: false
    # 设置容器的自动重启策略为 always，即容器总是重新启动
    restart: always
    build:
      # 指定构建该服务的上下文路径，即 docker-compose.yml 所在的目录
      context: ./
      # 指定 Dockerfile 文件路径
      dockerfile: ./spring-cloud-eureka/Dockerfile
      # 参数
      args:
        VERSION: 1.1.0
    # 暴露容器的端口映射，将容器的端口映射到主机端口
    ports:
      - "8762:8762"
    # 启动环境参数配置
    environment:
      - SERVER_PORT=8762
      - APPLICATION_NAME=spring-cloud-eureka
      - EUREKA_ADMIN_NAME=admin
      - EUREKA_ADMIN_PASSWORD=123456
      - HOSTNAME=spring-cloud-eureka-slave
      - LEASE_RENEWAL_INTERVAL_IN_SECONDS=30
      - PREFER_IP_ADDRESS=true
      - FETCH_REGISTRY=true
      - REGISTER_WITH_EUREKA=true
      - DEFAULT_ZONE=http://admin:123456@spring-cloud-eureka-master:8761/eureka/
      - ENDPOINTS=info,shutdown
      - ENABLE_SHOWDOWN=true
      - ENABLE_SELF_PRESERVATION=true
      - EVICTION_INTERVAL_TIMER_IN_MS=30000
    # 网络设置
    networks:
      - tsai-spring-cloud
    # 部署设置
    #deploy:
    #  # 确保只有一个副本
    #  replicas: 1
    #  # 部署资源大小限制
    #  resources:
    #    limits:
    #      cpus: 0.2
    #      memory: 512M
    #    reservations:
    #      cpus: 0.2
    #      memory: 512M

  # 定义一个名为 spring-cloud-gateway-master 的服务
  spring-cloud-gateway-master:
    # 指定容器所使用的镜像名称为 spring-cloud-gateway
    # image: spring-cloud-gateway:latest
    # 指定容器的名称为 spring-cloud-gateway-master
    container_name: spring-cloud-gateway-master
    privileged: false
    # 设置容器的自动重启策略为 always，即容器总是重新启动
    restart: always
    build:
      # 指定构建该服务的上下文路径，即 docker-compose.yml 所在的目录
      context: ./
      # 指定 Dockerfile 文件路径
      dockerfile: ./spring-cloud-gateway/Dockerfile
      # 参数
      args:
        VERSION: 1.1.0
    # 暴露容器的端口映射，将容器的端口映射到主机端口
    ports:
      - "30000:30000"
    # 启动环境参数配置
    environment:
      - SERVER_PORT=30000
      - APPLICATION_NAME=spring-cloud-gateway
      - HOSTNAME=spring-cloud-gateway-master
      - LEASE_RENEWAL_INTERVAL_IN_SECONDS=10
      - PREFER_IP_ADDRESS=true
      - FETCH_REGISTRY=true
      - REGISTER_WITH_EUREKA=true
      - DEFAULT_ZONE=http://admin:123456@spring-cloud-eureka-master:8761/eureka/,http://admin:123456@spring-cloud-eureka-slave:8762/eureka/
    networks:
      - tsai-spring-cloud

  # 定义一个名为 spring-cloud-gateway-slave 的服务
  spring-cloud-gateway-slave:
    # 指定容器所使用的镜像名称为 spring-cloud-gateway
    # image: spring-cloud-gateway:latest
    # 指定容器的名称为 spring-cloud-gateway-slave
    container_name: spring-cloud-gateway-slave
    privileged: false
    # 设置容器的自动重启策略为 always，即容器总是重新启动
    restart: always
    build:
      # 指定构建该服务的上下文路径，即 docker-compose.yml 所在的目录
      context: ./
      # 指定 Dockerfile 文件路径
      dockerfile: ./spring-cloud-gateway/Dockerfile
      # 参数
      args:
        VERSION: 1.1.0
    # 暴露容器的端口映射，将容器的端口映射到主机端口
    ports:
      - "30001:30001"
    # 启动环境参数配置
    environment:
      - SERVER_PORT=30001
      - APPLICATION_NAME=spring-cloud-gateway
      - HOSTNAME=spring-cloud-gateway-slave
      - LEASE_RENEWAL_INTERVAL_IN_SECONDS=10
      - PREFER_IP_ADDRESS=true
      - FETCH_REGISTRY=true
      - REGISTER_WITH_EUREKA=true
      - DEFAULT_ZONE=http://admin:123456@spring-cloud-eureka-master:8761/eureka/,http://admin:123456@spring-cloud-eureka-slave:8762/eureka/
    networks:
      - tsai-spring-cloud

networks:
  tsai-spring-cloud:
    driver: bridge