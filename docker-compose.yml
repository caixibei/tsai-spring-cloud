# 版本记录
# docker version: 26.1.3
# docker compose version: 2.27.0
# centos version: 7.8

# docker-compose安装命令
# sudo curl -L "https://github.com/docker/compose/releases/download/v2.27.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
# sudo chmod +x /usr/local/bin/docker-compose
# sudo ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose
# docker-compose --version

# 开启交换区，扩大运存（不推荐，速度会比较慢，有条件的购买更大的服务器）
# sudo dd if=/dev/zero of=swapfile bs=1G count=3
# sudo mkswap swapfile
# sudo chmod 600 swapfile
# sudo swapon swapfile
services:

  # 定义一个名为 redis-service 的服务
  redis-service:
    # 镜像版本
    image: redis:latest
    # 指定容器名称为 mysql
    container_name: redis
    privileged: true
    # 重启策略
    restart: always
    # 端口映射
    ports:
      - "6379:6379"
    # 磁盘挂载
    volumes:
      - ./docker/redis/conf/redis.conf:/etc/redis/redis.conf:rw
      - ./docker/redis/data/:/data:rw
    # 启动命令
    command:
      redis-server /etc/redis/redis.conf --appendonly yes
    # 网络设置
    networks:
      - tsai-spring-cloud
    # 部署设置
    deploy:
      # 确保只有一个副本
      replicas: 1
      # 部署资源大小限制
      resources:
        limits:
          cpus: 0.2
          memory: 512M
        reservations:
          cpus: 0.2
          memory: 512M

  # 定义一个名为 mysql_service 的服务
  mysql-service:
    # 镜像版本
    image: mysql:5.7
    privileged: true
    # 指定容器名称为 mysql
    container_name: mysql
    # 启动环境参数配置
    environment:
      MYSQL_ROOT_PASSWORD: NJI(mko0
      MYSQL_USER: scott
      MYSQL_PASS: scott
    # 文件挂载
    volumes:
      - ./docker/mysql/data:/var/lib/mysql
      - ./docker/mysql/conf/my.cnf:/etc/my.cnf
    # 暴露容器的端口映射，将容器的端口映射到主机端口
    ports:
      - "3306:3306"
    # 网络设置
    networks:
      - tsai-spring-cloud
    # 部署设置
    deploy:
      # 确保只有一个副本
      replicas: 1
      # 部署资源大小限制
      resources:
        limits:
          cpus: 0.5
          memory: 1024M
        reservations:
          cpus: 0.2
          memory: 512M

networks:
  tsai-spring-cloud:
    driver: bridge