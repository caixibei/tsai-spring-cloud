services:

  # DockerUI 管理工具
  docker-service:
    image: dpanel/dpanel
    container_name: docker-panel
    privileged: true
    # 重启策略
    restart: always
    # 端口映射
    ports:
      - "8080:8080"
      - "80:80"
      - "443:443"
    # 磁盘挂载
    volumes:
      - ./docker/dpanel/data:/dpanel:rw
      - /var/run/docker.sock:/var/run/docker.sock

  # Redis 服务
  redis-service:
    # 镜像版本
    image: redis:latest
    # 指定容器名称为 mysql
    container_name: redis
    privileged: true
    # 重启策略
    restart: always
    # 端口映射
    ports:
      - "6379:6379"
    # 磁盘挂载
    volumes:
      - ./docker/redis/conf/redis.conf:/etc/redis/redis.conf:rw
      - ./docker/redis/data/:/data:rw
    # 启动命令
    command:
      redis-server /etc/redis/redis.conf --appendonly yes
    # 网络设置
    networks:
      - tsai-spring-cloud
    # 部署设置
    deploy:
      # 确保只有一个副本
      replicas: 1
      # 部署资源大小限制
      resources:
        limits:
          cpus: 0.2
          memory: 512M
        reservations:
          cpus: 0.2
          memory: 512M

  # MySQL 服务
  mysql-service:
    # 镜像版本
    image: mysql:5.7
    privileged: true
    # 指定容器名称为 mysql
    container_name: mysql
    # 启动环境参数配置
    environment:
      MYSQL_ROOT_PASSWORD: NJI(mko0
    # 文件挂载
    volumes:
      - ./docker/mysql/data:/var/lib/mysql
      - ./docker/mysql/conf/my.cnf:/etc/my.cnf
    # 暴露容器的端口映射，将容器的端口映射到主机端口
    ports:
      - "3306:3306"
    # 网络设置
    networks:
      - tsai-spring-cloud
    # 部署设置
    deploy:
      # 确保只有一个副本
      replicas: 1
      # 部署资源大小限制
      resources:
        limits:
          cpus: 0.5
          memory: 1024M
        reservations:
          cpus: 0.2
          memory: 512M

  # 单点登录统一认证服务
  sso-service:
    # 指定容器所使用的镜像名称为 spring-cloud-sso
    # image: spring-cloud-sso:latest
    # 指定容器的名称为 spring-cloud-sso
    container_name: spring-cloud-sso
    privileged: true
    # 设置容器的自动重启策略为 always，即容器总是重新启动
    restart: unless-stopped
    build:
      # 指定构建该服务的上下文路径，即 Dockerfile 所在的目录
      # context: spring-cloud-sso
      context: .
      # 指定 Dockerfile 文件路径
      dockerfile: ./spring-cloud-sso/Dockerfile
      # 参数
      args:
        VERSION: 1.2.0
      # 禁用缓存
      no_cache: true
    # 暴露容器的端口映射，将容器的端口映射到主机端口
    ports:
      - "9000:9000"
    # 启动环境参数配置
    environment:
      - SERVER_PORT=9000
      - APPLICATION_NAME=spring-cloud-sso
      - REDIS_HOST=116.205.112.132
      - REDIS_PORT=6379
      - REDIS_PASSWORD=NJI(mko0
      - SPRING_DATASOURCE_DYNAMIC_DATASOURCE_MYSQL_URL=ENC(/5xJ0XvV4wg87/M+IHPP6B/qu91ZLspRWzrYdDmz6HpKLzk6Kh5gUDcz/bjbdul5tiUjNLn8NE1lhOVc6UAHlEG6GY8UU8HflSRACjzU3aKy3R2EEZCKAaRN2nlzLaBg0awR2J4D2lbXLqd0lhvWFeIQv8YWy6B61YeDNLHZvz8781bsMSfl4sZk0UtIY3UgTnx2FG5tzfGzr1b8+0PDkbo4C99/tkic+RlRIE8seRCi6k/UEYkZH2GksvC6oQWX+kppBjKBYwOWkp4EvFeqPTFm3PT+rbYB)
      - SPRING_DATASOURCE_DYNAMIC_DATASOURCE_MYSQL_USERNAME=ENC(QkI0VPRiOCJR8EbbhdlIog==)
      - SPRING_DATASOURCE_DYNAMIC_DATASOURCE_MYSQL_PASSWORD=ENC(0iRXcamB2YeKTq5XjQTsas1WC0K2SWx4)
      - HOSTNAME=spring-cloud-sso
      - PREFER_IP_ADDRESS=true
      - LEASE_RENEWAL_INTERVAL_IN_SECONDS=30
      - FETCH_REGISTRY=true
      - REGISTER_WITH_EUREKA=true
      - DEFAULT_ZONE=http://admin:123456@spring-cloud-eureka-master:8761/eureka/,http://admin:123456@spring-cloud-eureka-slave:8762/eureka/
      - ENDPOINTS=info,shutdown
      - ENABLE_SHOWDOWN=true
      - JSYPT_ENCRYPTOR_PASSWORD=DdNwDFt2D5v5OVstBTr4h565ZRGVnSO7
      - JSYPT_ENCRYPTOR_ALGORITHM=PBEWithMD5AndDES
      - JSYPT_ENCRYPTOR_STRING_OUTPUT_TYPE=base64
      - JSYPT_ENCRYPTOR_IV_GENERATOR_CLASSNAME=org.jasypt.iv.NoIvGenerator
    # 网络设置
    networks:
      - tsai-spring-cloud
    # 部署设置
    deploy:
      # 确保只有一个副本
      replicas: 1
      # 部署资源大小限制
      resources:
        limits:
          cpus: 0.5
          memory: 1024M
        reservations:
          cpus: 0.5
          memory: 1024M

  # Eureka 注册中心
  eureka-service-master:
    # 指定容器所使用的镜像名称为 spring-cloud-eureka
    # image: spring-cloud-eureka:latest
    # 指定容器的名称为 spring-cloud-eureka-master
    container_name: spring-cloud-eureka-master
    privileged: true
    # 设置容器的自动重启策略为 always，即容器总是重新启动
    restart: always
    build:
      # 指定构建该服务的上下文路径，即 Dockerfile 所在的目录
      # context: spring-cloud-eureka
      context: .
      # 指定 Dockerfile 文件路径
      dockerfile: ./spring-cloud-eureka/Dockerfile
      # 参数
      args:
        VERSION: 1.2.0
      # 禁用缓存
      no_cache: true
    # 暴露容器的端口映射，将容器的端口映射到主机端口
    ports:
      - "8761:8761"
    # 启动环境参数配置
    environment:
      - SERVER_PORT=8761
      - APPLICATION_NAME=spring-cloud-eureka
      - EUREKA_ADMIN_NAME=admin
      - EUREKA_ADMIN_PASSWORD=123456
      - HOSTNAME=spring-cloud-eureka-master
      - PREFER_IP_ADDRESS=true
      - LEASE_RENEWAL_INTERVAL_IN_SECONDS=30
      - FETCH_REGISTRY=true
      - REGISTER_WITH_EUREKA=true
      - DEFAULT_ZONE=http://admin:123456@spring-cloud-eureka-slave:8762/eureka/
      - ENDPOINTS=info,shutdown
      - ENABLE_SHOWDOWN=true
      - ENABLE_SELF_PRESERVATION=true
      - EVICTION_INTERVAL_TIMER_IN_MS=30000
    # 网络设置
    networks:
      - tsai-spring-cloud
    # 部署设置
    deploy:
      # 确保只有一个副本
      replicas: 1
      # 部署资源大小限制
      resources:
        limits:
          cpus: 0.5
          memory: 1024M
        reservations:
          cpus: 0.5
          memory: 1024M

  # Eureka 注册中心
  eureka-service-slave:
    # 指定容器所使用的镜像名称为 spring-cloud-eureka
    # image: spring-cloud-eureka:latest
    # 指定容器的名称为 spring-cloud-eureka-master
    container_name: spring-cloud-eureka-slave
    privileged: true
    # 设置容器的自动重启策略为 always，即容器总是重新启动
    restart: always
    build:
      # 指定构建该服务的上下文路径，即 Dockerfile 所在的目录
      # context: spring-cloud-eureka
      context: .
      # 指定 Dockerfile 文件路径
      dockerfile: ./spring-cloud-eureka/Dockerfile
      # 参数
      args:
        VERSION: 1.2.0
      # 禁用缓存
      no_cache: true
    # 暴露容器的端口映射，将容器的端口映射到主机端口
    ports:
      - "8762:8762"
    # 启动环境参数配置
    environment:
      - SERVER_PORT=8762
      - APPLICATION_NAME=spring-cloud-eureka
      - EUREKA_ADMIN_NAME=admin
      - EUREKA_ADMIN_PASSWORD=123456
      - HOSTNAME=spring-cloud-eureka-slave
      - LEASE_RENEWAL_INTERVAL_IN_SECONDS=30
      - PREFER_IP_ADDRESS=true
      - FETCH_REGISTRY=true
      - REGISTER_WITH_EUREKA=true
      - DEFAULT_ZONE=http://admin:123456@spring-cloud-eureka-master:8761/eureka/
      - ENDPOINTS=info,shutdown
      - ENABLE_SHOWDOWN=true
      - ENABLE_SELF_PRESERVATION=true
      - EVICTION_INTERVAL_TIMER_IN_MS=30000
    # 网络设置
    networks:
      - tsai-spring-cloud
    # 部署设置
    deploy:
      # 确保只有一个副本
      replicas: 1
      # 部署资源大小限制
      resources:
        limits:
          cpus: 0.5
          memory: 1024M
        reservations:
          cpus: 0.5
          memory: 1024M

  # Gateway 网关服务
  gateway-service-master:
    # 指定容器所使用的镜像名称为 spring-cloud-gateway
    # image: spring-cloud-gateway:latest
    # 指定容器的名称为 spring-cloud-gateway-master
    container_name: spring-cloud-gateway-master
    privileged: true
    # 设置容器的自动重启策略为 always，即容器总是重新启动
    restart: always
    build:
      # 指定构建该服务的上下文路径，即 Dockerfile 所在的目录
      context: .
      # 指定 Dockerfile 文件路径
      dockerfile: ./spring-cloud-gateway/Dockerfile
      # 参数
      args:
        VERSION: 1.2.0
      # 禁止缓存
      no_cache: true
    # 暴露容器的端口映射，将容器的端口映射到主机端口
    ports:
      - "30000:30000"
    # 启动环境参数配置
    environment:
      - SERVER_PORT=30000
      - APPLICATION_NAME=spring-cloud-gateway
      - HOSTNAME=spring-cloud-gateway-master
      - LEASE_RENEWAL_INTERVAL_IN_SECONDS=10
      - PREFER_IP_ADDRESS=true
      - FETCH_REGISTRY=true
      - REGISTER_WITH_EUREKA=true
      - DEFAULT_ZONE=http://admin:123456@spring-cloud-eureka-master:8761/eureka/,http://admin:123456@spring-cloud-eureka-slave:8762/eureka/
    # 网络设置
    networks:
      - tsai-spring-cloud
    # 部署设置
    deploy:
      # 确保只有一个副本
      replicas: 1
      # 部署资源大小限制
      resources:
        limits:
          cpus: 0.2
          memory: 512M
        reservations:
          cpus: 0.2
          memory: 512M

  # Gateway 网关服务
  gateway-service-slave:
    # 指定容器所使用的镜像名称为 spring-cloud-gateway
    # image: spring-cloud-gateway:latest
    # 指定容器的名称为 spring-cloud-gateway-slave
    container_name: spring-cloud-gateway-slave
    privileged: true
    # 设置容器的自动重启策略为 always，即容器总是重新启动
    restart: always
    build:
      # 指定构建该服务的上下文路径，即 Dockerfile 所在的目录
      context: .
      # 指定 Dockerfile 文件路径
      dockerfile: ./spring-cloud-gateway/Dockerfile
      # 参数
      args:
        VERSION: 1.2.0
      # 禁止缓存
      no_cache: true
    # 暴露容器的端口映射，将容器的端口映射到主机端口
    ports:
      - "30001:30001"
    # 启动环境参数配置
    environment:
      - SERVER_PORT=30001
      - APPLICATION_NAME=spring-cloud-gateway
      - HOSTNAME=spring-cloud-gateway-slave
      - LEASE_RENEWAL_INTERVAL_IN_SECONDS=10
      - PREFER_IP_ADDRESS=true
      - FETCH_REGISTRY=true
      - REGISTER_WITH_EUREKA=true
      - DEFAULT_ZONE=http://admin:123456@spring-cloud-eureka-master:8761/eureka/,http://admin:123456@spring-cloud-eureka-slave:8762/eureka/
    # 网络设置
    networks:
      - tsai-spring-cloud
    # 部署设置
    deploy:
      # 确保只有一个副本
      replicas: 1
      # 部署资源大小限制
      resources:
        limits:
          cpus: 0.2
          memory: 512M
        reservations:
          cpus: 0.2
          memory: 512M

networks:
  tsai-spring-cloud:
    driver: bridge